/* ===========================
   Import Tailwind CSS
   =========================== */

 @tailwind base;
 @tailwind components;
 @tailwind utilities;
 
 /* ===========================
    Theme Colours
    =========================== */
 
 /**
  * Define custom colours with individual HSL values.
  * These are your brand or primary colours.
  * Assign these to generic base theme variables for
  * use in derived colours and theme definitions below.
  *
  * Demo colours are provided for visual reference only.
  */
 :root {
   /* Steel Blue */
   --demo-steel-blue: hsl(210, 50%, 50%);
   --colour-primary-h: 210;
   --colour-primary-s: 50%;
   --colour-primary-l: 50%; 
   --colour-primary-base: hsl(var(--colour-primary-h), var(--colour-primary-s), var(--colour-primary-l));
  
   /* Amaranth Purple */
   --demo-amaranth-purple: hsl(350, 70%, 40%);
   --colour-secondary-h: 350;
   --colour-secondary-s: 70%;
   --colour-secondary-l: 40%;
  
   /* Atomic Tangerine */
   --demo-atomic-tangerine: hsl(20, 70%, 60%);
   --colour-accent-h: 20;
   --colour-accent-s: 70%;
   --colour-accent-l: 60%;
 
   /* Ghost White */
   --demo-ghost-white: hsl(240, 20%, 99%);
   --colour-background-h: 240;
   --colour-background-s: 20%;
   --colour-background-l: 99%;

 }
 
 /* ===========================
    Fundamental colours
    =========================== */
 
 /**
  * Define fundamental colours like black, white, and various shades of gray.
  * These are essential for any theme.
  */
 :root {
   --colour-black: hsl(0, 0%, 0%);
   --colour-white: hsl(0, 0%, 100%);
   --colour-gray-95: hsl(0, 0%, 95%);
   --colour-gray-85: hsl(0, 0%, 85%);
   --colour-gray-70: hsl(0, 0%, 70%);
   --colour-gray-50: hsl(0, 0%, 50%);
   --colour-gray-35: hsl(0, 0%, 35%);
   --colour-gray-25: hsl(0, 0%, 25%);
   --colour-gray-20: hsl(0, 0%, 20%);
   --colour-gray-10: hsl(0, 0%, 10%);
 }
 
 /* ===========================
    Feedback colours
    =========================== */
 
 /**
  * Define base feedback colours for success, error, warning, and info.
  */
 :root {
   /* Base HSL values for feedback colours */
   --colour-success-h: 120; /* Green */
   --colour-error-h: 0;     /* Red */
   --colour-warning-h: 40;  /* Orange */
   --colour-info-h: var(--colour-primary-h); /* Use primary hue */
 
   --colour-success-s: 50%;
   --colour-error-s: 70%;
   --colour-warning-s: 100%;
   --colour-info-s: var(--colour-primary-s);
 
   --colour-success-l: 50%;
   --colour-error-l: 50%;
   --colour-warning-l: 50%;
   --colour-info-l: var(--colour-primary-l);
 
   /* Construct feedback colours */
   --colour-success-base: hsl(var(--colour-success-h), var(--colour-success-s), var(--colour-success-l));
   --colour-error-base: hsl(var(--colour-error-h), var(--colour-error-s), var(--colour-error-l));
   --colour-warning-base: hsl(var(--colour-warning-h), var(--colour-warning-s), var(--colour-warning-l));
   --colour-info-base: hsl(var(--colour-info-h), var(--colour-info-s), var(--colour-info-l));
 
 }
 
 
 /* ===========================
    Derived colours with High-Level Semantic Roles
    =========================== */

 
 /* Hover Variants using transformations */
 :root {
   /* Primary Hover colour */
   --colour-primary-hover: hsl(
     var(--colour-primary-h),
     var(--colour-primary-s),
     calc(var(--colour-primary-l) - 10%)
   );
 
   /* Secondary Hover colour */
   --colour-secondary-hover: hsl(
     var(--colour-secondary-h),
     var(--colour-secondary-s),
     calc(var(--colour-secondary-l) - 10%)
   );
 }
 
 /* ===========================
    Theme Definitions
    =========================== */
 
 /**
  * Define detailed semantic roles for each theme.
  * These variables will change based on the active theme.
  */
 
 /* Light Theme */
 :root {
   --colour-primary: var(--colour-primary-base);
   --colour-secondary: var(--colour-secondary-base);
   --colour-accent: var(--colour-accent-base);
   --colour-background: var(--colour-background-base);
   --colour-text-primary: var(--colour-black);
   --colour-text-secondary: var(--colour-gray-35); /* Dark Gray */
   --colour-border: var(--colour-gray-85); /* Light Gray Border */
   --colour-focus-ring:  hsl(var(--colour-primary-h), 100%, 60%);
 
   /* Feedback colours */
   --colour-success: var(--colour-success-base);
   --colour-error: var(--colour-error-base);
   --colour-warning: var(--colour-warning-base);
   --colour-info: var(--colour-info-base);
 }
 
 /* Dark Theme */
 [data-theme="dark"] {
   --colour-primary: var(--colour-primary-base);
   --colour-secondary: var(--colour-secondary-base);
   --colour-accent: var(--colour-accent-base);
   --colour-background: var(--colour-black);
   --colour-text-primary: var(--colour-white);
   --colour-text-secondary: var(--colour-gray-70); /* Medium Light Gray */
   --colour-border: var(--colour-gray-25); /* Darker Gray Border */
   --colour-focus-ring: hsl(var(--colour-primary-h), 100%, 70%);
 
   /* Feedback colours (lightened for dark background) */
   --colour-success: hsl(var(--colour-success-h), var(--colour-success-s), calc(var(--colour-success-l) + 10%));
   --colour-error: hsl(var(--colour-error-h), var(--colour-error-s), calc(var(--colour-error-l) + 10%));
   --colour-warning: hsl(var(--colour-warning-h), var(--colour-warning-s), calc(var(--colour-warning-l) + 10%));
   --colour-info: var(--colour-info-base);
 
   /* Hover Variants (lightened for dark theme) */
   --colour-primary-hover: hsl(
     var(--colour-primary-h),
     var(--colour-primary-s),
     calc(var(--colour-primary-l) + 10%)
   );
 
   --colour-secondary-hover: hsl(
     var(--colour-secondary-h),
     var(--colour-secondary-s),
     calc(var(--colour-secondary-l) + 10%)
   );
 }
 
 /* High-Contrast Theme */
 [data-theme="high-contrast"] {
   --colour-primary: var(--colour-black);
   --colour-secondary: var(--colour-secondary-base);
   --colour-accent: var(--colour-accent-base);
   --colour-background: var(--colour-white);
   --colour-text-primary: var(--colour-black);
   --colour-text-secondary: var(--colour-gray-20); /* Very Dark Gray */
   --colour-border: var(--colour-black);
   --colour-focus-ring: hsl(var(--colour-secondary-h), 100%, 50%);
 
   /* Feedback colours (brightened for contrast) */
   --colour-success: hsl(var(--colour-success-h), 100%, 40%);
   --colour-error: hsl(var(--colour-error-h), 100%, 50%);
   --colour-warning: hsl(calc(var(--colour-warning-h) - 10), 100%, 50%); /* Slight hue shift for contrast */
   --colour-info: hsl(var(--colour-info-h), 100%, 50%);
  
   /* Hover Variants (no change in high-contrast) */
   --colour-primary-hover: var(--colour-primary);
   --colour-secondary-hover: var(--colour-secondary);
 }
 
 /* ===========================
    Base Styles
    =========================== */
 
 /**
  * Use detailed semantic roles in styling.
  * Styles automatically adapt when the theme changes.
  */
 
 body {
   background-color: var(--colour-background);
   color: var(--colour-text-primary);
   font-family: 'Inter', sans-serif;
 }
 
 a {
   color: var(--colour-primary);
   text-decoration: underline;
   text-decoration-thickness: 2px;
   text-underline-offset: 3px;
 }
 
 a:hover {
   color: var(--colour-primary-hover);
 }
 
 button {
   background-color: var(--colour-primary);
   color: var(--colour-white);
 }
 
 button:hover {
   background-color: var(--colour-primary-hover);
 }
 
 button:focus,
 a:focus,
 input:focus {
   outline: 2px solid var(--colour-focus-ring);
   outline-offset: 2px;
 }
 
 hr {
   border-color: var(--colour-border);
 }
 
 input,
 textarea {
   border: 1px solid var(--colour-border);
 }
 
 ::selection {
   background-color: var(--colour-accent);
   color: var(--colour-white);
 }
 
 /* Secondary Button Styles */
 .btn-secondary {
   background-color: var(--colour-secondary);
   color: var(--colour-white);
 }
 
 .btn-secondary:hover {
   background-color: var(--colour-secondary-hover);
 }
 
 /* ===========================
    Accessibility
    =========================== */
 
 /**
  * Include support for reduced motion, custom scrollbars, and high-contrast mode.
  */
 
 @media (prefers-reduced-motion: reduce) {
   * {
     animation: none !important;
     transition: none !important;
   }
 }
 
 ::-webkit-scrollbar {
   width: 10px;
 }
 
 ::-webkit-scrollbar-track {
   background: var(--colour-background);
 }
 
 ::-webkit-scrollbar-thumb {
   background: var(--colour-neutral-dark);
   border-radius: 5px;
 }
 
 /* High-Contrast Media Query Support */
 @media (prefers-contrast: more) {
   :root {
     --colour-background: var(--colour-white);
     --colour-text-primary: var(--colour-black);
     --colour-border: var(--colour-black);
     --colour-primary: var(--colour-black);
     --colour-focus-ring: var(--colour-focus-ring-high-contrast);
   }
 }
 